{"version":3,"sources":["./src/app/theme/forms/ngx-wizard/address/address.component.html","./src/app/theme/forms/ngx-wizard/address/address.component.scss","./src/app/theme/forms/ngx-wizard/address/address.component.ts","./src/app/theme/forms/ngx-wizard/data/formData.model.ts","./src/app/theme/forms/ngx-wizard/data/formData.service.ts","./src/app/theme/forms/ngx-wizard/navbar/navbar.component.html","./src/app/theme/forms/ngx-wizard/navbar/navbar.component.scss","./src/app/theme/forms/ngx-wizard/navbar/navbar.component.ts","./src/app/theme/forms/ngx-wizard/ngx-wizard-routing.module.ts","./src/app/theme/forms/ngx-wizard/ngx-wizard.component.html","./src/app/theme/forms/ngx-wizard/ngx-wizard.component.scss","./src/app/theme/forms/ngx-wizard/ngx-wizard.component.ts","./src/app/theme/forms/ngx-wizard/ngx-wizard.module.ts","./src/app/theme/forms/ngx-wizard/personal/personal.component.html","./src/app/theme/forms/ngx-wizard/personal/personal.component.scss","./src/app/theme/forms/ngx-wizard/personal/personal.component.ts","./src/app/theme/forms/ngx-wizard/result/result.component.html","./src/app/theme/forms/ngx-wizard/result/result.component.scss","./src/app/theme/forms/ngx-wizard/result/result.component.ts","./src/app/theme/forms/ngx-wizard/work/work.component.html","./src/app/theme/forms/ngx-wizard/work/work.component.scss","./src/app/theme/forms/ngx-wizard/work/work.component.ts","./src/app/theme/forms/ngx-wizard/workflow/workflow.model.ts","./src/app/theme/forms/ngx-wizard/workflow/workflow.service.ts"],"names":[],"mappings":"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","file":"ngx-wizard.module.chunk.js","sourcesContent":["module.exports = \"<!-- Address Tab form Starts -->\\r\\n<form #addressForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n    <div class=\\\"tab-pane active\\\">\\r\\n        <h4 class=\\\"head text-center\\\">{{title}}</h4>\\r\\n        <br/>\\r\\n        <div class='row'>\\r\\n            <div class='col-sm-12'>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-control-label\\\" for=\\\"street\\\">Street Address</label>\\r\\n                    <input class=\\\"form-control input-md\\\" #street=\\\"ngModel\\\" required id=\\\"street\\\" name=\\\"street\\\" type=\\\"text\\\"  [(ngModel)]=\\\"address.street\\\">\\r\\n                    <small class=\\\"form-text text-danger\\\" *ngIf=\\\"!street.valid && (street.dirty || street.touched)\\\">This field is required!</small>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class='col-12 col-sm-4'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-control-label\\\" for=\\\"city\\\">City</label>\\r\\n                            <input class=\\\"form-control input-md\\\" #city=\\\"ngModel\\\" required id=\\\"city\\\" name=\\\"city\\\" type=\\\"text\\\"  [(ngModel)]=\\\"address.city\\\">\\r\\n                            <small class=\\\"form-text text-danger\\\" *ngIf=\\\"!city.valid && (city.dirty || city.touched)\\\">This field is required!</small>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-4 col-sm-offset-1 col-sm-3'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-control-label\\\" for=\\\"state\\\">State</label>\\r\\n                            <input class=\\\"form-control input-md\\\" #state=\\\"ngModel\\\" required id=\\\"state\\\" name=\\\"state\\\" type=\\\"text\\\"  [(ngModel)]=\\\"address.state\\\">\\r\\n                            <small class=\\\"form-text text-danger\\\" *ngIf=\\\"!state.valid && (state.dirty || state.touched)\\\">This field is required!</small>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-offset-1 col-7 col-sm-offset-1 col-sm-3'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-control-label\\\" for=\\\"zip\\\">Zip</label>\\r\\n                            <input class=\\\"form-control input-md\\\" #zip=\\\"ngModel\\\" required id=\\\"zip\\\" name=\\\"zip\\\" type=\\\"text\\\"  [(ngModel)]=\\\"address.zip\\\">\\r\\n                            <small class=\\\"form-text text-danger\\\" *ngIf=\\\"!zip.valid && (zip.dirty || zip.touched)\\\">This field is required!</small>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group text-center\\\">\\r\\n                    <button uiSref=\\\"work\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-secondary\\\" (click)=\\\"cancel()\\\"> <span style=\\\"margin-right:10px;\\\"><i class=\\\"feather icon-chevron-left\\\"></i></span> Previous</button>\\r\\n                    <button uiSref=\\\"result\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-info\\\" [disabled]=\\\"!addressForm.valid\\\" (click)=\\\"save(addressForm)\\\"> Next <span style=\\\"margin-left:10px;\\\"><i class=\\\"feather icon-chevron-right\\\"></i></span></button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</form>\\r\\n<!-- Address Tab form Ends -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/theme/forms/ngx-wizard/address/address.component.html\n// module id = ./src/app/theme/forms/ngx-wizard/address/address.component.html\n// module chunks = ngx-wizard.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/theme/forms/ngx-wizard/address/address.component.scss\n// module id = ./src/app/theme/forms/ngx-wizard/address/address.component.scss\n// module chunks = ngx-wizard.module","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Address } from '../data/formData.model';\r\nimport { FormDataService } from '../data/formData.service';\r\nimport { WorkflowService } from '../workflow/workflow.service';\r\nimport { STEPS } from '../workflow/workflow.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-mt-wizard-address',\r\n    templateUrl: './address.component.html',\r\n    styleUrls: ['./address.component.scss']\r\n})\r\n\r\nexport class AddressComponent implements OnInit {\r\n    title = 'Where do you live?';\r\n    address: Address;\r\n    form: any;\r\n\r\n    constructor(private router: Router,\r\n        private route: ActivatedRoute, private formDataService: FormDataService,\r\n        private workflowService: WorkflowService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.address = this.formDataService.getAddress();\r\n\r\n    }\r\n\r\n    save(form: any) {\r\n        if (!form.valid) {\r\n          return;\r\n        }\r\n\r\n        this.formDataService.setAddress(this.address);\r\n        const firstState = this.workflowService.getFirstInvalidStep(STEPS.work);\r\n        this.router.navigate(['result'], { relativeTo: this.route.parent, skipLocationChange: true });\r\n    }\r\n\r\n    cancel() {\r\n        this.router.navigate(['work'], { relativeTo: this.route.parent, skipLocationChange: true });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/theme/forms/ngx-wizard/address/address.component.ts","\r\nexport class FormData {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    work: string;\r\n    street: string;\r\n    city: string;\r\n    state: string;\r\n    zip: string;\r\n\r\n    clear() {\r\n        this.firstName = '';\r\n        this.lastName = '';\r\n        this.email = '';\r\n        this.work = '';\r\n        this.street = '';\r\n        this.city = '';\r\n        this.state = '';\r\n        this.zip = '';\r\n    }\r\n}\r\n\r\nexport class Personal {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n}\r\n\r\nexport class Address {\r\n    street: string;\r\n    city: string;\r\n    state: string;\r\n    zip: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/theme/forms/ngx-wizard/data/formData.model.ts","import { Injectable } from '@angular/core';\r\n\r\nimport { FormData, Personal, Address } from './formData.model';\r\nimport { WorkflowService } from '../workflow/workflow.service';\r\nimport { STEPS } from '../workflow/workflow.model';\r\n\r\n@Injectable()\r\nexport class FormDataService {\r\n\r\n    private formData: FormData = new FormData();\r\n    private isPersonalFormValid = false;\r\n    private isWorkFormValid = false;\r\n    private isAddressFormValid = false;\r\n\r\n    constructor(private workflowService: WorkflowService) {\r\n    }\r\n\r\n    getPersonal(): Personal {\r\n        const personal: Personal = {\r\n          firstName: this.formData.firstName,\r\n          lastName: this.formData.lastName,\r\n          email: this.formData.email\r\n        };\r\n        return personal;\r\n    }\r\n\r\n    setPersonal(data: Personal) {\r\n        this.isPersonalFormValid = true;\r\n        this.formData.firstName = data.firstName;\r\n        this.formData.lastName = data.lastName;\r\n        this.formData.email = data.email;\r\n        this.workflowService.validateStep(STEPS.personal);\r\n    }\r\n\r\n    getWork(): string {\r\n        return this.formData.work;\r\n    }\r\n\r\n    setWork(data: string) {\r\n        this.isWorkFormValid = true;\r\n        this.formData.work = data;\r\n        this.workflowService.validateStep(STEPS.work);\r\n    }\r\n\r\n    getAddress(): Address {\r\n        const address: Address = {\r\n            street: this.formData.street,\r\n            city: this.formData.city,\r\n            state: this.formData.state,\r\n            zip: this.formData.zip\r\n        };\r\n        return address;\r\n    }\r\n\r\n    setAddress(data: Address) {\r\n        this.isAddressFormValid = true;\r\n        this.formData.street = data.street;\r\n        this.formData.city = data.city;\r\n        this.formData.state = data.state;\r\n        this.formData.zip = data.zip;\r\n        this.workflowService.validateStep(STEPS.address);\r\n    }\r\n\r\n    getFormData(): FormData {\r\n        return this.formData;\r\n    }\r\n\r\n    resetFormData(): FormData {\r\n        this.workflowService.resetSteps();\r\n        this.formData.clear();\r\n        this.isPersonalFormValid = this.isWorkFormValid = this.isAddressFormValid = false;\r\n        return this.formData;\r\n    }\r\n\r\n    isFormValid() {\r\n        return this.isPersonalFormValid && this.isWorkFormValid && this.isAddressFormValid;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/theme/forms/ngx-wizard/data/formData.service.ts","module.exports = \"<div class=\\\"board-inner\\\" id=\\\"status-buttons\\\">\\r\\n    <ul class=\\\"nav nav-tabs nav-fill\\\" id=\\\"myTab\\\">\\r\\n        <div class=\\\"liner\\\"></div>\\r\\n\\r\\n        <li class=\\\"active nav-item\\\">\\r\\n            <a [ngClass]=\\\"(page==='Personal')?'nav-link active':'nav-link'\\\" uiSrefActive=\\\"active\\\" uiSref=\\\"personal\\\" data-toggle=\\\"tab\\\"\\r\\n                title=\\\"personal\\\">\\r\\n                <span class=\\\"round-tabs one\\\">\\r\\n                  <h5><i class=\\\"feather icon-user-check\\\"></i> Personal</h5>\\r\\n                </span>\\r\\n            </a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n            <a [ngClass]=\\\"(page==='Work')?'nav-link active':'nav-link'\\\" uiSrefActive=\\\"active\\\" uiSref=\\\"work\\\" data-toggle=\\\"tab\\\" title=\\\"work\\\">\\r\\n                <span class=\\\"round-tabs two\\\">\\r\\n                  <h5><i class=\\\"feather icon-message-circle\\\"></i> Work</h5>\\r\\n                </span>\\r\\n            </a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n            <a [ngClass]=\\\"(page==='Address')?'nav-link active':'nav-link'\\\" uiSrefActive=\\\"active\\\" uiSref=\\\"address\\\" data-toggle=\\\"tab\\\" title=\\\"address\\\">\\r\\n                <span class=\\\"round-tabs three\\\">\\r\\n                  <h5><i class=\\\"feather icon-map\\\"></i> Address</h5>\\r\\n                </span>\\r\\n            </a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n            <a [ngClass]=\\\"(page==='Result')?'nav-link active':'nav-link'\\\" uiSrefActive=\\\"active\\\" uiSref=\\\"result\\\" data-toggle=\\\"tab\\\" title=\\\"completed\\\">\\r\\n                <span class=\\\"round-tabs four\\\">\\r\\n                  <h5><i class=\\\"feather icon-airplay\\\"></i> Finished</h5>\\r\\n                </span>\\r\\n            </a>\\r\\n        </li>\\r\\n    </ul>\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/theme/forms/ngx-wizard/navbar/navbar.component.html\n// module id = ./src/app/theme/forms/ngx-wizard/navbar/navbar.component.html\n// module chunks = ngx-wizard.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/theme/forms/ngx-wizard/navbar/navbar.component.scss\n// module id = ./src/app/theme/forms/ngx-wizard/navbar/navbar.component.scss\n// module chunks = ngx-wizard.module","import {Component, OnInit} from '@angular/core';\r\nimport { Router, ActivatedRoute, Params, NavigationEnd } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-msw-navbar',\r\n    templateUrl: './navbar.component.html',\r\n    styleUrls: ['./navbar.component.scss']\r\n})\r\n\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  page = 'Personal';\r\n    constructor(private router: Router, private route: ActivatedRoute) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.router.events\r\n            .filter(event => event instanceof NavigationEnd)\r\n            .subscribe(event => {\r\n                let currentRoute = this.route.root;\r\n                while (currentRoute.children[0] !== undefined) {\r\n                    currentRoute = currentRoute.children[0];\r\n                }\r\n                this.page = currentRoute.snapshot.data['title'];\r\n            });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/theme/forms/ngx-wizard/navbar/navbar.component.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PersonalComponent } from './personal/personal.component';\r\nimport { WorkComponent } from './work/work.component';\r\nimport { AddressComponent } from './address/address.component';\r\nimport { ResultComponent } from './result/result.component';\r\nimport {NGXFormWizardComponent} from './ngx-wizard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n     component: NGXFormWizardComponent,\r\n    data: {\r\n      title: 'ngx-wizard'\r\n    },\r\n    children: [\r\n      {\r\n        path: 'wizard',\r\n        component: PersonalComponent,\r\n        data: {\r\n          title: 'Personal'\r\n        }\r\n      },\r\n      {\r\n        path: 'work',\r\n        component: WorkComponent,\r\n        data: {\r\n          title: 'Work'\r\n        }\r\n      },\r\n      {\r\n        path: 'address',\r\n        component: AddressComponent,\r\n        data: {\r\n          title: 'Address'\r\n        }\r\n      },\r\n      {\r\n        path: 'result',\r\n        component: ResultComponent,\r\n        data: {\r\n          title: 'Result'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NGXWizardRoutingModule { }\r\n\r\nexport const routedComponents = [NGXFormWizardComponent];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/theme/forms/ngx-wizard/ngx-wizard-routing.module.ts","module.exports = \"<div class=\\\"page-body\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <section id=\\\"ngx\\\" class=\\\"ngx-form-wizard\\\">\\r\\n        <app-card [title]=\\\"'NGX Wizard'\\\">\\r\\n            <div class=\\\"board\\\">\\r\\n              <app-msw-navbar></app-msw-navbar>\\r\\n              <div class=\\\"tab-content\\\">\\r\\n                <router-outlet> </router-outlet>\\r\\n              </div>\\r\\n            </div>\\r\\n        </app-card>\\r\\n        </section>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/theme/forms/ngx-wizard/ngx-wizard.component.html\n// module id = ./src/app/theme/forms/ngx-wizard/ngx-wizard.component.html\n// module chunks = ngx-wizard.module","module.exports = \".tab-content .tab-pane {\\n  padding-top: 20px; }\\n\\n.alert {\\n  padding: 8px;\\n  margin-bottom: 8px; }\\n\\n.ng-valid[required], .ng-valid.required {\\n  border-left: 5px solid #42A948;\\n  /* green */ }\\n\\n.ng-invalid:not(form) {\\n  border-left: 5px solid #a94442;\\n  /* red */ }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/theme/forms/ngx-wizard/ngx-wizard.component.scss\n// module id = ./src/app/theme/forms/ngx-wizard/ngx-wizard.component.scss\n// module chunks = ngx-wizard.module","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-multi-step-wizard',\r\n    templateUrl: './ngx-wizard.component.html',\r\n    styleUrls: ['./ngx-wizard.component.scss']\r\n})\r\n\r\nexport class NGXFormWizardComponent implements OnInit {\r\n    constructor(private router: Router, private route: ActivatedRoute) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.router.navigate(['/forms/ngx/wizard'], { skipLocationChange: true });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/theme/forms/ngx-wizard/ngx-wizard.component.ts","import { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { NGXFormWizardComponent } from './ngx-wizard.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\n\r\nimport { PersonalComponent } from './personal/personal.component';\r\nimport { WorkComponent } from './work/work.component';\r\nimport { AddressComponent } from './address/address.component';\r\nimport { ResultComponent } from './result/result.component';\r\n\r\nimport { FormDataService } from './data/formData.service';\r\nimport { WorkflowService } from './workflow/workflow.service';\r\nimport {SharedModule} from '../../../shared/shared.module';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NGXWizardRoutingModule} from './ngx-wizard-routing.module';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n      CommonModule,\r\n      FormsModule,\r\n      NGXWizardRoutingModule,\r\n      SharedModule\r\n    ],\r\n    providers: [{ provide: FormDataService, useClass: FormDataService },\r\n    { provide: WorkflowService, useClass: WorkflowService }],\r\n    declarations: [NGXFormWizardComponent, NavbarComponent, PersonalComponent, WorkComponent, AddressComponent, ResultComponent],\r\n    bootstrap: [NGXFormWizardComponent]\r\n\r\n})\r\n\r\nexport class NGXFormWizardModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/theme/forms/ngx-wizard/ngx-wizard.module.ts","module.exports = \"<!-- Personal Tab Form Starts -->\\r\\n<form #personalForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n    <div class=\\\"tab-pane active\\\">\\r\\n        <h4 class=\\\"head text-center\\\">{{title}}</h4>\\r\\n        <br/>\\r\\n        <div class='row'>\\r\\n            <div class='col-12'>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class='col-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-control-label\\\" for=\\\"firstname\\\">First Name</label>\\r\\n                            <input class=\\\"form-control input-md\\\" #firstname=\\\"ngModel\\\" required id=\\\"firstname\\\" name=\\\"firstname\\\" type=\\\"text\\\"  [(ngModel)]=\\\"personal.firstName\\\">\\r\\n                            <small class=\\\"form-text text-danger\\\" *ngIf=\\\"!firstname.valid && (firstname.dirty || firstname.touched)\\\">This field is required!</small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class='col-12 col-sm-6'>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label class=\\\"form-control-label\\\" for=\\\"lastname\\\">Last Name</label>\\r\\n                            <input class=\\\"form-control input-md\\\" #lastname=\\\"ngModel\\\" required id=\\\"lastname\\\" name=\\\"lastname\\\" type=\\\"text\\\"  [(ngModel)]=\\\"personal.lastName\\\">\\r\\n                            <small class=\\\"form-text text-danger\\\" *ngIf=\\\"!lastname.valid && (lastname.dirty || lastname.touched)\\\">This field is required!</small>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"form-control-label\\\" for=\\\"email\\\">Email</label>\\r\\n                    <input class=\\\"form-control input-md\\\" #email=\\\"ngModel\\\" required email id=\\\"email\\\" name=\\\"email\\\" type=\\\"text\\\"  [(ngModel)]=\\\"personal.email\\\">\\r\\n                    <small class=\\\"form-text text-danger\\\" *ngIf=\\\"!email.valid && (email.dirty || email.touched)\\\">Please enter a valid email!</small>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group text-center\\\">\\r\\n                    <button type=\\\"button\\\" uiSref=\\\"work\\\" class=\\\"btn btn-success btn-raised\\\" [disabled]=\\\"!personalForm.valid\\\" (click)=\\\"save(personalForm)\\\"> Next <span style=\\\"margin-left:10px;\\\"><i class=\\\"feather icon-chevron-right\\\"></i></span></button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n<!-- Personal Tab Form Ends -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/theme/forms/ngx-wizard/personal/personal.component.html\n// module id = ./src/app/theme/forms/ngx-wizard/personal/personal.component.html\n// module chunks = ngx-wizard.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/theme/forms/ngx-wizard/personal/personal.component.scss\n// module id = ./src/app/theme/forms/ngx-wizard/personal/personal.component.scss\n// module chunks = ngx-wizard.module","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Personal } from '../data/formData.model';\r\nimport { FormDataService } from '../data/formData.service';\r\nimport { WorkflowService } from '../workflow/workflow.service';\r\nimport { STEPS } from '../workflow/workflow.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-mt-wizard-personal',\r\n    templateUrl: './personal.component.html',\r\n    styleUrls: ['./personal.component.scss']\r\n})\r\n\r\nexport class PersonalComponent implements OnInit {\r\n    title = 'Please tell us about yourself.';\r\n    personal: Personal;\r\n    form: any;\r\n\r\n    constructor(private router: Router,\r\n        private route: ActivatedRoute, private formDataService: FormDataService,\r\n        private workflowService: WorkflowService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.personal = this.formDataService.getPersonal();\r\n    }\r\n\r\n    save(form: any) {\r\n        if (!form.valid) {\r\n          return;\r\n        }\r\n\r\n        this.formDataService.setPersonal(this.personal);\r\n\r\n        const firstState = this.workflowService.getFirstInvalidStep(STEPS.work);\r\n        if (firstState.length > 0) {}\r\n        this.router.navigateByUrl('/forms/ngx/work', { relativeTo: this.route.parent, skipLocationChange: true });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/theme/forms/ngx-wizard/personal/personal.component.ts","module.exports = \"<!-- Result tab Form starts -->\\r\\n<div class=\\\"tab-pane active\\\">\\r\\n    <h3 class=\\\"head text-center\\\">{{title}}</h3>\\r\\n\\r\\n    <p class=\\\"narrow text-center\\\">\\r\\n        Here is a copy of the information you have entered:\\r\\n    </p>\\r\\n    <div class='row'>\\r\\n        <div class='col-offset-1 col-10 col-sm-offset-3 col-sm-8 col-md-offset-4 col-md-8'>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class='col-3 col-sm-2'>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-control-label\\\">Name: </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class='col-9 col-sm-10'>\\r\\n                    {{formData.firstName + ' ' + formData.lastName}}\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class='col-3 col-sm-2'>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-control-label\\\">Email: </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class='col-9 col-sm-10'>\\r\\n                    {{formData.email}}\\r\\n                </div>\\r\\n           </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class='col-3 col-sm-2'>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-control-label\\\">Work: </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class='col-9 col-sm-10'>\\r\\n                    {{formData.work}}\\r\\n                </div>\\r\\n           </div>\\r\\n           <div class=\\\"row\\\">\\r\\n                <div class='col-3 col-sm-2'>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label class=\\\"form-control-label\\\">Address: </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class='col-9 col-sm-10'>\\r\\n                    {{formData.street}}\\r\\n                    <br/>\\r\\n                    {{formData.city + ' ' + formData.state + ' ' + formData.zip}}\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"text-center\\\">\\r\\n        <button uiSref=\\\"personal\\\" class=\\\"btn btn-success btn-raised\\\" [disabled]=\\\"!isFormValid\\\" (click)=\\\"submit()\\\"> Submit <span style=\\\"margin-left:10px;\\\"><i class=\\\"feather icon-arrow-right\\\"></i></span></button>\\r\\n    </div>\\r\\n</div>\\r\\n<!-- Result tab Form ends -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/theme/forms/ngx-wizard/result/result.component.html\n// module id = ./src/app/theme/forms/ngx-wizard/result/result.component.html\n// module chunks = ngx-wizard.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/theme/forms/ngx-wizard/result/result.component.scss\n// module id = ./src/app/theme/forms/ngx-wizard/result/result.component.scss\n// module chunks = ngx-wizard.module","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { FormData } from '../data/formData.model';\r\nimport { FormDataService } from '../data/formData.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component ({\r\n    selector: 'app-mt-wizard-result',\r\n    templateUrl: './result.component.html',\r\n    styleUrls: ['./result.component.scss']\r\n})\r\n\r\nexport class ResultComponent implements OnInit {\r\n    public title = 'Thank You!';\r\n    @Input() formData: FormData;\r\n    public isFormValid = false;\r\n\r\n    constructor(private router: Router, private route: ActivatedRoute, private formDataService: FormDataService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.formData = this.formDataService.getFormData();\r\n        this.isFormValid = this.formDataService.isFormValid();\r\n    }\r\n\r\n    submit() {\r\n        alert('Excellent Job!');\r\n        this.formData = this.formDataService.resetFormData();\r\n        this.isFormValid = false;\r\n        this.router.navigate(['wizard'], { relativeTo: this.route.parent, skipLocationChange: true });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/theme/forms/ngx-wizard/result/result.component.ts","module.exports = \"<!-- Work Tab Form Starts -->\\r\\n<form #workForm=\\\"ngForm\\\" class=\\\"editForm\\\" novalidate>\\r\\n    <div >\\r\\n        <div class=\\\"tab-pane active\\\">\\r\\n            <h4 class=\\\"head text-center\\\">{{title}}</h4>\\r\\n            <br/>\\r\\n            <div class='row'>\\r\\n                <div class='col-offset-4 col-10 col-sm-offset-5 col-sm-4'>\\r\\n                  <div class=\\\"form-group form-radio\\\">\\r\\n                    <div class=\\\"radio radiofill radio-success radio-inline\\\">\\r\\n                      <label>\\r\\n                        <input type=\\\"radio\\\" #work=\\\"ngModel\\\" required name=\\\"work\\\" checked=\\\"checked\\\" [(ngModel)]=\\\"workType\\\" value=\\\"Design\\\">\\r\\n                        <i class=\\\"helper\\\"></i>Design\\r\\n                      </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"radio radiofill radio-info radio-inline\\\">\\r\\n                      <label>\\r\\n                        <input type=\\\"radio\\\" #work=\\\"ngModel\\\" required name=\\\"work\\\" checked=\\\"checked\\\" [(ngModel)]=\\\"workType\\\" value=\\\"Code\\\">\\r\\n                        <i class=\\\"helper\\\"></i>Code\\r\\n                      </label>\\r\\n                    </div>\\r\\n                    <div class=\\\"radio radiofill radio-warning radio-inline\\\">\\r\\n                      <label>\\r\\n                        <input type=\\\"radio\\\" #work=\\\"ngModel\\\" required name=\\\"work\\\" checked=\\\"checked\\\" [(ngModel)]=\\\"workType\\\" value=\\\"Deploy\\\">\\r\\n                        <i class=\\\"helper\\\"></i>Deploy\\r\\n                      </label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group text-center space-20\\\">\\r\\n                <button uiSref=\\\"personal\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-secondary\\\" (click)=\\\"cancel()\\\"> <span style=\\\"margin-right:10px;\\\"><i class=\\\"feather icon-chevron-left\\\"></i></span> Previous</button>\\r\\n                <button uiSref=\\\"address\\\" type=\\\"button\\\" class=\\\"btn btn-raised btn-info\\\" [disabled]=\\\"!workForm.valid\\\" (click)=\\\"save(workForm)\\\"> Next <span style=\\\"margin-left:10px;\\\"><i class=\\\"feather icon-chevron-right\\\"></i></span></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n<!-- Work Tab Form Ends -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/theme/forms/ngx-wizard/work/work.component.html\n// module id = ./src/app/theme/forms/ngx-wizard/work/work.component.html\n// module chunks = ngx-wizard.module","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/theme/forms/ngx-wizard/work/work.component.scss\n// module id = ./src/app/theme/forms/ngx-wizard/work/work.component.scss\n// module chunks = ngx-wizard.module","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { FormDataService } from '../data/formData.service';\r\nimport { WorkflowService } from '../workflow/workflow.service';\r\nimport { STEPS } from '../workflow/workflow.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-mt-wizard-work',\r\n    templateUrl: './work.component.html',\r\n    styleUrls: ['./work.component.scss']\r\n})\r\n\r\nexport class WorkComponent implements OnInit {\r\n    title = 'What do you do?';\r\n    workType: string;\r\n    form: any;\r\n\r\n    constructor(private router: Router,\r\n        private route: ActivatedRoute, private formDataService: FormDataService,\r\n        private workflowService: WorkflowService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.workType = this.formDataService.getWork();\r\n\r\n    }\r\n\r\n    save(form: any) {\r\n        if (!form.valid) {\r\n          return;\r\n        }\r\n\r\n        this.formDataService.setWork(this.workType);\r\n        const firstState = this.workflowService.getFirstInvalidStep(STEPS.work);\r\n        this.router.navigate(['address'], { relativeTo: this.route.parent, skipLocationChange: true });\r\n    }\r\n\r\n    cancel() {\r\n        this.router.navigate(['wizard'], { relativeTo: this.route.parent, skipLocationChange: true });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/theme/forms/ngx-wizard/work/work.component.ts","export const STEPS = {\r\n    personal: 'personal',\r\n    work: 'work',\r\n    address: 'address',\r\n    result: 'result'\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/theme/forms/ngx-wizard/workflow/workflow.model.ts","import { Injectable } from '@angular/core';\r\nimport { STEPS } from './workflow.model';\r\n\r\n@Injectable()\r\nexport class WorkflowService {\r\n    private workflow = [\r\n        { step: STEPS.personal, valid: false },\r\n        { step: STEPS.work, valid: false },\r\n        { step: STEPS.address, valid: false },\r\n        { step: STEPS.result, valid: false }\r\n    ];\r\n\r\n    validateStep(step: string) {\r\n        let found = false;\r\n        for (let i = 0; i < this.workflow.length && !found; i++) {\r\n            if (this.workflow[i].step === step) {\r\n                found = this.workflow[i].valid = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    resetSteps() {\r\n        this.workflow.forEach(element => {\r\n            element.valid = false;\r\n        });\r\n    }\r\n\r\n    getFirstInvalidStep(step: string): string {\r\n        let found = false;\r\n        let valid = true;\r\n        let redirectToStep = '';\r\n        for (let i = 0; i < this.workflow.length && !found && valid; i++) {\r\n            const item = this.workflow[i];\r\n            if (item.step === step) {\r\n                found = true;\r\n                redirectToStep = '';\r\n            } else {\r\n                valid = item.valid;\r\n                redirectToStep = item.step;\r\n            }\r\n        }\r\n        return redirectToStep;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/theme/forms/ngx-wizard/workflow/workflow.service.ts"],"sourceRoot":"webpack:///"}